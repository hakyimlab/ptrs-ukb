if 'outdir' not in config:
    config['outdir'] = 'output'

# output
rule all_format:
    input:
        [ '{outdir}/subsetted_{predictdb}_x_{population}.chr{i}.dosage.gz'.format(outdir = config['outdir'], predictdb = config['predictdb']['name'], population = config['indiv_name'], i = i) for i in range(1, 23) ]
# END

# extract variant list from predictdb
rule predictdb_var:
    input:
        config['predictdb']['path']
    params:
        config['predictdb']['varcol']
    output:
        '{outdir}/var_list_{predictdb}.txt'
    shell:
        'python ../../code/extract_var_list_from_predictdb.py \
          --predictdb {input[0]} \
          --varcol {params[0]} \
          --output {output[0]}'
# END

# subset bgen genotype
rule subset_bgen:
    input:
        indiv = config['indiv_path'],
        var = '{outdir}/var_list_{predictdb}.txt',
        bgen = config['genotype']['bgen'],
        sample = config['genotype']['sample']
    params:
        out = '{outdir}/subsetted_{predictdb}_x_{population}.chr{i}'
    output:
        temp('{outdir}/subsetted_{predictdb}_x_{population}.chr{i}.gen')
    shell:
        '{config[plink_cmd]} \
          --bgen {input.bgen} \
          --sample {input.sample} \
          --keep {input.indiv} \
          --extract {input.var} \
          --out {params.out} \
          --export oxford \
          --memory {config[plink_memory_in_mb]} \
          --threads 1'
# END 

# rename subsetted genotype
rule format_geno:
    input:
        '{outdir}/subsetted_{predictdb}_x_{population}.chr{i}.gen'
    output:
        '{outdir}/subsetted_{predictdb}_x_{population}.chr{i}.dosage.gz'
    shell:
        'cat {input[0]} | gzip > {output[0]}'
# END
